// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model fruit {
  id    String @id @default(uuid())
  name  String
  color String
}

model Employee {
  Id        String  @id @default(uuid())
  Title     String
  FirstName String
  LastName  String
  BirthDate String?
  Email     String? @unique
  UserName  String  @unique

  Address    String?
  City       String?
  Country    String?
  PostalCode String?

  Notes     String?
  Photo     String?
  PhotoPath String?
  State     String? @default("Checked-Out")
  Order     Order[]
}

model Category {
  CategoryName String?
  Description  String?
  Id           String    @id @default(uuid())
  Product      Product[]
}

model Customer {
  Id        String  @id @default(uuid())
  Title     String
  FirstName String
  LastName  String
  BirthDate String?
  Email     String? @unique
  UserName  String  @unique

  Address    String?
  City       String?
  Country    String?
  PostalCode String?

  Notes     String?
  Photo     String?
  PhotoPath String?
  Role      String  @default("General")
  Order     Order[]
}

model Supplier {
  Id         String    @id @default(uuid())
  Title      String    @default("นาย")
  FirstName  String    @default("test")
  LastName   String?
  Email      String    @unique @default("test@test.com")
  UserName   String    @unique @default("test")
  Phone      String?
  Address    String?
  City       String?
  Country    String?
  PostalCode String?
  Notes      String?
  Photo      String?
  Product    Product[]
}

model Order {
  Id         String    @id @default(uuid())
  OrderCode  String    @default("D-000000000")
  Customer   Customer? @relation(fields: [CustomerId], references: [Id])
  CustomerId String?

  Employee   Employee @relation(fields: [EmployeeId], references: [Id])
  EmployeeId String

  OrderDate   String
  TotalPrice  Int?
  State       String? @default("Pending")
  TypeService String  @default("Dine-in")

  OrderDetail OrderDetail[]

  Table   Table?  @relation(fields: [TableId], references: [Id])
  TableId String?
}

model Product {
  CategoryId String
  Category   Category @relation(fields: [CategoryId], references: [Id])

  Discontinued    Boolean       @default(false)
  Id              String        @id @default(uuid())
  ProductName     String?
  QuantityPerUnit String?
  SupplierId      String?
  Supplier        Supplier?     @relation(fields: [SupplierId], references: [Id])
  UnitPrice       String
  UnitsInStock    Int
  UnitsOnOrder    Int
  OrderDetail     OrderDetail[]
}

model OrderDetail {
  Discount Float
  Id       String @id @default(uuid())

  Product   Product @relation(fields: [ProductId], references: [Id])
  ProductId String

  Quantity  Int
  UnitPrice String

  Order   Order  @relation(fields: [OrderId], references: [Id])
  OrderId String
}

model Table {
  Id          String  @id @default(uuid())
  Name        String
  Description String?
  State       String  @default("Available")
  Order       Order[]
}
